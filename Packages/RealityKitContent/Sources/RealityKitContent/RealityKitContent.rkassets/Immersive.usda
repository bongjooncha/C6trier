#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["sky", "center", "floor", "fx", "clap", "TapGesture"]
    def Sphere "sky" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, -2.5197298e-7, -1.03841906e-7)
        }
    )
    {
        reorder nameChildren = ["DefaultMaterial", "center"]
        rel material:binding = </Root/sky/DefaultMaterial>
        double radius = 10
        quatf xformOp:orient = (1, -6.5413386e-15, -1.2598649e-7, -5.1920953e-8)
        float3 xformOp:scale = (-1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/sky/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.018548703, 0.0033644622, 0.11128906) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "fx" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["fx_wave", "SpatialAudio_1", "Collider", "RCP_BehaviorsContainer", "OnTap", "DefaultMaterial", "PointLight", "SpatialAudio"]
        rel material:binding = </Root/fx/DefaultMaterial>
        double size = 0.5
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0.25, -4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            reorder nameChildren = ["DefaultSurfaceShader", "Sphere_2"]
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/fx/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 0.97442013, 0) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "PointLight" (
            active = false
        )
        {
            float attenuationFalloffExponent = 1.5
            float attenuationRadius = 2
            float3 color = (1, 0.9339807, 0.9457537)
            uniform token info:id = "RealityKit.PointLight"
            float intensity = 50000
        }

        def RealityKitComponent "SpatialAudio"
        {
            float directivityFocus = 0
            uniform token info:id = "RealityKit.SpatialAudio"
            float rolloffFactor = 0
        }

        def RealityKitAudioFile "fx_wave"
        {
            uniform asset file = @Sound/fx.wave@
            uniform bool shouldLoop = 0
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/fx/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/fx/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/fx/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/fx>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/TapGesture>
                rel animationLibraryKeyOverrideKey = </Root/fx/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "AudioLibrary"
        {
            uniform token info:id = "RealityKit.AudioLibrary"

            def RealityKitDict "resources"
            {
                string[] keys = ["fx.wave"]
                rel values = </Root/fx_wave>
            }
        }
    }

    def Sphere "floor" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, -2.5197298e-7, -1.03841906e-7)
        }
    )
    {
        rel material:binding = </Root/floor/DefaultMaterial>
        double radius = 10
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.99999994, 0, 0, 0)
        float3 xformOp:scale = (0.99999994, 2.2204459e-16, 0.99999994)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/floor/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.018548703, 0.0033644622, 0.11128906) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }
    }

    def Sphere "clap" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "Cone", "PointLight"]
        rel material:binding = </Root/clap/DefaultMaterial>
        double radius = 0.25
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0.25, -8)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            reorder nameChildren = ["DefaultSurfaceShader", "Cone"]
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/clap/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "PointLight"
        {
            float attenuationFalloffExponent = 1.5
            float3 color = (1, 0.98296213, 0.9290233)
            uniform token info:id = "RealityKit.PointLight"
        }
    }

    def Cone "center" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.5
        rel material:binding = </Root/center/DefaultMaterial>
        double radius = 0.25
        quatf xformOp:orient = (0.99999994, 0, 0, 0)
        float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
        float3 xformOp:translate = (0, 0.49999997, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/center/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def RealityKitTimeline "TapGesture"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "fx.wave"
                bool controlPlayback = 0
                double duration = 3.7238125
                double gain = 0
                uniform token info:id = "C7D27117-2BF4-47B8-AE36-24C6D6D8CC1F"
                double startTime = 0
                rel target = </Root/fx>

                def RealityKitStruct "handoffType"
                {
                    token type = "stop"
                }
            }
        }
    }

    def RealityKitAudioFile "fx_wave"
    {
        uniform asset file = @Sound/fx.wave@
        uniform bool shouldLoop = 0
    }
}

